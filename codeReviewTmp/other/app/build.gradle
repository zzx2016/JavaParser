apply plugin: 'com.android.application'
apply plugin: 'review'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.abc.javaparser"
        minSdkVersion 18
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    /*implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.7.0'
    implementation 'com.github.javaparser:javaparser-core:3.7.0'*/

}

task TestXXX(type: Copy) {
    /*project.mkdir(project.buildDir.path + File.separator + "review")
    println(rootProject.file('app/src/main/java/com/abc/javaparser'))
    println(project.buildDir.path + File.separator + "review")
    from(rootProject.file('app/src/main/java/com/abc/javaparser'))
    into(project.buildDir.path + File.separator + "review")*/
}

task codeReview(type: Copy) {
    delete "${rootDir}/codeReviewTmp"
    def cmd = 'git diff --name-only'
    def gitDiff = cmd.execute().text.trim()
    def lines = gitDiff.split('\n')
    lines.each { String line ->
        if (line.endsWith(".java")) {
            copy {
                from "${rootDir}/" + line
                into "${rootDir}/codeReviewTmp/java"
            }
        } else {
            copy {
                from "${rootDir}/" + line
                into "${rootDir}/codeReviewTmp/other"
            }
        }
    }
}
